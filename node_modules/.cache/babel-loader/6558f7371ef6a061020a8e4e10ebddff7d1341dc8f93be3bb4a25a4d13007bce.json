{"ast":null,"code":"import _slicedToArray from\"/Users/makeithappenmike/Documents/BootCamp/20 Challenge/react-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{FaArrowCircleUp}from'react-icons/fa';import{Button}from'../styles/TopButtonStyle';// Thanks to https://www.geeksforgeeks.org/how-to-create-a-scroll-to-top-button-in-react-js/ for this!\nimport{jsx as _jsx}from\"react/jsx-runtime\";var ScrollButton=function ScrollButton(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var toggleVisible=function toggleVisible(){var scrolled=document.documentElement.scrollTop;if(scrolled>300){setVisible(true);}else if(scrolled<=300){setVisible(false);}};var scrollToTop=function scrollToTop(){window.scrollTo({top:0,behavior:'smooth'/* you can also use 'auto' behaviour\n         in place of 'smooth' */});};window.addEventListener('scroll',toggleVisible);return/*#__PURE__*/_jsx(Button,{children:/*#__PURE__*/_jsx(FaArrowCircleUp,{onClick:scrollToTop,style:{display:visible?'inline':'none'}})});};export default ScrollButton;","map":{"version":3,"names":["React","useState","FaArrowCircleUp","Button","ScrollButton","visible","setVisible","toggleVisible","scrolled","document","documentElement","scrollTop","scrollToTop","window","scrollTo","top","behavior","addEventListener","display"],"sources":["/Users/makeithappenmike/Documents/BootCamp/20 Challenge/react-portfolio/src/components/TopButton.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { FaArrowCircleUp } from 'react-icons/fa';\nimport { Button } from '../styles/TopButtonStyle';\n\n// Thanks to https://www.geeksforgeeks.org/how-to-create-a-scroll-to-top-button-in-react-js/ for this!\n  \nconst ScrollButton = () =>{\n  \n  const [visible, setVisible] = useState(false)\n  \n  const toggleVisible = () => {\n    const scrolled = document.documentElement.scrollTop;\n    if (scrolled > 300){\n      setVisible(true)\n    } \n    else if (scrolled <= 300){\n      setVisible(false)\n    }\n  };\n  \n  const scrollToTop = () =>{\n    window.scrollTo({\n      top: 0, \n      behavior: 'smooth'\n      /* you can also use 'auto' behaviour\n         in place of 'smooth' */\n    });\n  };\n  \n  window.addEventListener('scroll', toggleVisible);\n  \n  return (\n    <Button>\n     <FaArrowCircleUp onClick={scrollToTop} \n     style={{display: visible ? 'inline' : 'none'}} />\n    </Button>\n  );\n}\n  \nexport default ScrollButton;"],"mappings":"6JAAA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAASC,eAAe,KAAQ,gBAAgB,CAChD,OAASC,MAAM,KAAQ,0BAA0B,CAEjD;AAAA,2CAEA,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAQ,CAExB,cAA8BH,QAAQ,CAAC,KAAK,CAAC,wCAAtCI,OAAO,eAAEC,UAAU,eAE1B,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAS,CAC1B,GAAMC,SAAQ,CAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,CACnD,GAAIH,QAAQ,CAAG,GAAG,CAAC,CACjBF,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,IACI,IAAIE,QAAQ,EAAI,GAAG,CAAC,CACvBF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,GAAMM,YAAW,CAAG,QAAdA,YAAW,EAAQ,CACvBC,MAAM,CAACC,QAAQ,CAAC,CACdC,GAAG,CAAE,CAAC,CACNC,QAAQ,CAAE,QACV;AACN,gCACI,CAAC,CAAC,CACJ,CAAC,CAEDH,MAAM,CAACI,gBAAgB,CAAC,QAAQ,CAAEV,aAAa,CAAC,CAEhD,mBACE,KAAC,MAAM,wBACN,KAAC,eAAe,EAAC,OAAO,CAAEK,WAAY,CACtC,KAAK,CAAE,CAACM,OAAO,CAAEb,OAAO,CAAG,QAAQ,CAAG,MAAM,CAAE,EAAG,EACzC,CAEb,CAAC,CAED,cAAeD,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}