{"ast":null,"code":"import _slicedToArray from\"/Users/makeithappenmike/Documents/BootCamp/20 Challenge/react-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Button from'react-bootstrap/Button';import Col from'react-bootstrap/Col';import Form from'react-bootstrap/Form';import Row from'react-bootstrap/Row';import TopButton from'../TopButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ContactForm(){var buttonClass='btn btn-light';var styles={field:{marginBottom:'10px'}};// Set validation state\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),validated=_useState2[0],setValidated=_useState2[1];// Define email field for blur handling\nvar emailField=document.querySelector('#emailField');// Handle submit\nvar handleSubmit=function handleSubmit(event){var form=event.currentTarget;// If everything is valid\nif(form.checkValidity()===false){event.preventDefault();event.stopPropagation();alert('Uh oh! Looks like there are errors you need to fix.');}else{// Reset the form\nform.reset();setValidated(true);alert('Thanks for submitting!');}setValidated(true);};// Handle blur (leaving the Email input field empty)\nvar handleEmailBlur=function handleEmailBlur(event){var form=event.currentTarget;if(form.checkValidity()===false){event.preventDefault();event.stopPropagation();}setValidated(true);};// Handle blur (leaving the Message input field empty)\nvar handleMessageBlur=function handleMessageBlur(event){var form=event.currentTarget;if(form.checkValidity()===false){event.preventDefault();event.stopPropagation();}setValidated(true);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Contact\"}),/*#__PURE__*/_jsx(Form,{noValidate:true,validated:validated,onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Row,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"4\",controlId:\"validationCustom01\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"First name\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"First name\",style:styles.field})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Col,md:\"4\",controlId:\"validationCustom02\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Last name\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"text\",placeholder:\"Last name\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlInput1\",children:[/*#__PURE__*/_jsx(Form.Label,{id:\"emailField\",children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,hasvalidation:\"true\",type:\"email\",placeholder:\"name@example.com\",onBlur:handleEmailBlur}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Please use a valid Email Address.\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Message\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,hasvalidation:\"true\",as:\"textarea\",placeholder:\"Message\",onBlur:handleMessageBlur,rows:3}),/*#__PURE__*/_jsx(Form.Control.Feedback,{type:\"invalid\",children:\"Please include a message.\"})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:buttonClass,children:\"Submit form\"})]})}),/*#__PURE__*/_jsx(TopButton,{}),/*#__PURE__*/_jsx(\"p\",{})]});}export default ContactForm;","map":{"version":3,"names":["React","useState","Button","Col","Form","Row","TopButton","ContactForm","buttonClass","styles","field","marginBottom","validated","setValidated","emailField","document","querySelector","handleSubmit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","alert","reset","handleEmailBlur","handleMessageBlur"],"sources":["/Users/makeithappenmike/Documents/BootCamp/20 Challenge/react-portfolio/src/components/sections/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport TopButton from '../TopButton';\n\nfunction ContactForm() {\n  \n  const buttonClass = 'btn btn-light';\n  const styles = {\n    field: {\n        marginBottom: '10px'\n    }\n  }\n\n  // Set validation state\n  const [validated, setValidated] = useState(false);\n  \n  // Define email field for blur handling\n  const emailField = document.querySelector('#emailField');\n\n  // Handle submit\n  const handleSubmit = (event) => {\n  const form = event.currentTarget;\n  \n  // If everything is valid\n  if (form.checkValidity() === false) {\n    event.preventDefault();\n    event.stopPropagation();\n    alert('Uh oh! Looks like there are errors you need to fix.');\n  } else {\n    // Reset the form\n    form.reset();\n    setValidated(true);\n    alert('Thanks for submitting!');\n}\n\nsetValidated(true);\n};\n\n// Handle blur (leaving the Email input field empty)\nconst handleEmailBlur = (event) => {\n  const form = event.currentTarget;\n  if (form.checkValidity() === false) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  setValidated(true);\n};\n\n// Handle blur (leaving the Message input field empty)\nconst handleMessageBlur = (event) => {\n  const form = event.currentTarget;\n  if (form.checkValidity() === false) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  setValidated(true);\n};\n\n  return (\n      <>\n      <h2>Contact</h2>\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Row className='mb-3'>\n        <Form.Group as={Col} md='4' controlId='validationCustom01'>\n          <Form.Label>First name</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='First name'\n            style={styles.field}\n          />\n          {/* <Form.Control.Feedback>Looks good!</Form.Control.Feedback> */}\n        </Form.Group>\n        <Form.Group as={Col} md='4' controlId='validationCustom02'>\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Last name'\n          />\n          {/* <Form.Control.Feedback>Looks good!</Form.Control.Feedback> */}\n        </Form.Group>\n        <Form.Group className='mb-3' controlId='exampleForm.ControlInput1'>\n        <Form.Label id='emailField'>Email Address</Form.Label>\n        <Form.Control\n        required\n        hasvalidation='true'\n        type='email'\n        placeholder='name@example.com'\n        onBlur={handleEmailBlur}\n           />\n        <Form.Control.Feedback type='invalid'>\n              Please use a valid Email Address.\n            </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group className='mb-3' controlId='exampleForm.ControlTextarea1'>\n        <Form.Label>Message</Form.Label>\n        <Form.Control\n        required\n        hasvalidation='true'\n        as='textarea'\n        placeholder='Message'\n        onBlur={handleMessageBlur}\n        rows={3} />\n        <Form.Control.Feedback type='invalid'>\n              Please include a message.\n            </Form.Control.Feedback>\n      </Form.Group>\n      <Button type='submit' className={buttonClass}>Submit form</Button>\n      </Row>\n    </Form>\n    <TopButton />\n    <p></p>\n    </>\n  );\n}\n\nexport default ContactForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}